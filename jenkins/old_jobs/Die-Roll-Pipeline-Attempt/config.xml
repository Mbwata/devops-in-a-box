<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.38">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>//env.SQL_DIR = ${WORKSPACE}
node {
   def mvnHome
   stage(&apos;Preparation&apos;) { // for display purposes
      // Get some code from a GitHub repository
        git credentialsId: &apos;b7229c8d-7d5a-499b-9a0b-f375fad9fbe6&apos;, url: &apos;https://github.com/Mbwata/die-roll-multi-env.git&apos;
        flywayrunner commandLineArgs: &apos;&apos;, credentialsId: &apos;75a61263-932f-4673-809c-13a3aab46230&apos;, flywayCommand: &apos;clean&apos;, installationName: &apos;Flyway1&apos;, locations: &apos;filesystem:&apos; + env.WORKSPACE + &apos;/sql&apos;, url: &apos;jdbc:postgresql://die-roll-db:5532/dieroll&apos;
        flywayrunner commandLineArgs: &apos;&apos;, credentialsId: &apos;75a61263-932f-4673-809c-13a3aab46230&apos;, flywayCommand: &apos;migrate&apos;, installationName: &apos;Flyway1&apos;, locations: &apos;filesystem:&apos; + env.WORKSPACE + &apos;/sql&apos;, url: &apos;jdbc:postgresql://die-roll-db:5532/dieroll&apos;
        nodejs(&apos;Node1&apos;) {
            sh label: &apos;&apos;, script: &apos;&apos;&apos;mv -f .env_testing .env
            npm install
            npm test&apos;&apos;&apos;
            sh label: &apos;&apos;, script: &apos;/var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarScanner/bin/sonar-scanner -Dsonar.host.url=http://sonarqube-service:9442 -Dsonar.projectBaseDir=&apos;+ env.WORKSPACE
        }
   }
   stage(&apos;Build&apos;) {
      // Run the maven build
      withEnv([&quot;MVN_HOME=$mvnHome&quot;]) {
         if (isUnix()) {
            sh &apos;&quot;$MVN_HOME/bin/mvn&quot; -Dmaven.test.failure.ignore clean package&apos;
         } else {
            bat(/&quot;%MVN_HOME%\bin\mvn&quot; -Dmaven.test.failure.ignore clean package/)
         }
      }
   }
   stage(&apos;Results&apos;) {
      junit &apos;**/target/surefire-reports/TEST-*.xml&apos;
      archiveArtifacts &apos;target/*.jar&apos;
   }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>